name: Python Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up the specified Python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      # Step 3: Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Step 5: Lint with flake8
      - name: Lint with flake8
        run: |
          # Checks for syntax errors and undefined names, failing if any are found
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Relaxed linting for warnings, with a max line length of 127 and complexity limit of 10
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 6: Run tests with pytest
      - name: Test with pytest
        run: |
          pytest
