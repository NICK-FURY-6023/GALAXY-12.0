server: # REST and WS server
  port: 8090
  address: 127.0.0.1
  http2:
    enabled: false # Whether to enable HTTP/2 support
      
lavalink:
  plugins:
    - dependency: "dev.lavalink.youtube:youtube-plugin:1.3.0"
      snapshot: false # Set to true if you want to use a snapshot version.

    - dependency: "com.github.Nansess.BaldMan-LavaSrc:baldman-plugin:v4.0"
      repository: "https://jitpack.io"
      snapshot: false

    #- dependency: "dev.schlaubi.lyrics:lavalink:2.4.5"
    #  repository: "https://maven.lavalink.dev/releases" # this is optional for lavalink v4.0.0-beta.5 or greater
    #  snapshot: false # set to true if you want to use snapshot builds (see below)

    - dependency: "me.duncte123:java-lyrics-plugin:1.6.4"
      repository: "https://maven.lavalink.dev/releases" # (optional)

    - dependency: "com.github.devoxin:lavadspx-plugin:0.0.5" # replace {VERSION} with the latest version from the "Releases" tab.
      repository: "https://jitpack.io"

    - dependency: "com.github.topi314.lavasearch:lavasearch-plugin:1ad3951"
    #  repository: "https://maven.lavalink.dev/releases" # this is optional for lavalink v4.0.0-beta.5 or greater
      snapshot: true # set to true if you want to use snapshot builds (see below)
  server:
    password: "youshallnotpass"
    sources:
      youtube: false
      bandcamp: true
      soundcloud: true
      twitch: true
      vimeo: true
      nico: true
      http: true
      local: false
    filters: # All filters are enabled by default
      volume: true
      equalizer: true
      karaoke: true
      timescale: true
      tremolo: true
      vibrato: true
      distortion: true
      rotation: true
      channelMix: true
      lowPass: true
    bufferDurationMs: 400 # The duration of the NAS buffer. Higher values fare better against longer GC pauses. Duration <= 0 to disable JDA-NAS. Minimum of 40ms, lower values may introduce pauses.
    frameBufferDurationMs: 5000 # How many milliseconds of audio to keep buffered
    opusEncodingQuality: 10 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.
    resamplingQuality: LOW # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.
    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.
    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.
    youtubePlaylistLoadLimit: 6 # Number of pages at 100 each
    playerUpdateInterval: 5 # How frequently to send player updates to clients, in seconds
    youtubeSearchEnabled: true
    soundcloudSearchEnabled: true
    gc-warnings: true
    #ratelimit:
      #ipBlocks: ["1.0.0.0/8", "..."] # list of ip blocks
      #excludedIps: ["...", "..."] # ips which should be explicit excluded from usage by lavalink
      #strategy: "RotateOnBan" # RotateOnBan | LoadBalance | NanoSwitch | RotatingNanoSwitch
      #searchTriggersFail: true # Whether a search 429 should trigger marking the ip as failing
      #retryLimit: -1 # -1 = use default lavaplayer value | 0 = infinity | >0 = retry will happen this numbers times
    #youtubeConfig: # Required for avoiding all age restrictions by YouTube, some restricted videos still can be played without.
      #email: "" # Email of Google account
      #password: "" # Password of Google account
    #httpConfig: # Useful for blocking bad-actors from ip-grabbing your music node and attacking it, this way only the http proxy will be attacked
      #proxyHost: "localhost" # Hostname of the proxy, (ip or domain)
      #proxyPort: 3128 # Proxy port, 3128 is the default for squidProxy
      #proxyUser: "" # Optional user for basic authentication fields, leave blank if you don't use basic auth
      #proxyPassword: "" # Password for basic authentication

plugins:
  youtube:
    enabled: true
    allowSearch: true
    clients: ["MUSIC", "ANDROID", "WEB", "TVHTML5EMBEDDED"] # valid: MUSIC, ANDROID, ANDROID_TESTSUITE, IOS, WEB, TVHTML5EMBEDDED (age restriction bypass)
  dunctebot:
    ttsLanguage: "pt-BR" # language of the TTS engine
    sources:
      # true = source enabled, false = source disabled
      getyarn: true # www.getyarn.io
      clypit: true # www.clyp.it
      tts: true # speak:Words to speak
      pornhub: false # should be self-explanatory
      reddit: true # should be self-explanatory
      ocremix: true # www.ocremix.org
      tiktok: true # tiktok.com
      mixcloud: true # mixcloud.com
      soundgasm: true # soundgasm.net
  lavasrc:
    providers: # Custom providers for track loading. This is the default
      - "dzisrc:%ISRC%" # Deezer ISRC provider
      - "dzsearch:%QUERY%" # Deezer search provider
      #- "ytsearch:\"%ISRC%\"" # Will be ignored if track does not have an ISRC. See https://en.wikipedia.org/wiki/International_Standard_Recording_Code
      #- "ytsearch:%QUERY%" # Will be used if track has no ISRC or no track could be found for the ISRC
      - "scsearch:%QUERY%"
      #  you can add multiple other fallback sources here
    sources:
      spotify: true # Enable Spotify source
      applemusic: true # Enable Apple Music source
      deezer: true # Enable Deezer source
      yandexmusic: false # Enable Yandex Music source
      flowerytts: false # Enable Flowery TTs source
      youtube: false # Enable YouTube search source (https://github.com/topi314/LavaSearch)
      tidal: true
    spotify:
      clientId: ""
      clientSecret: ""
      countryCode: "BR" # the country code you want to use for filtering the artists top tracks. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      playlistLoadLimit: 3 # The number of pages at 100 tracks each
      albumLoadLimit: 3 # The number of pages at 50 tracks each
    applemusic:
      countryCode: "BR" # the country code you want to use for filtering the artists top tracks and language. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      mediaAPIToken: "" # apple music api token
      # or specify an apple music key
      keyID: "" # your key id
      teamID: "" # your team id
      musicKitKey: ""
      playlistLoadLimit: 6 # The number of pages at 300 tracks each
      albumLoadLimit: 6 # The number of pages at 300 tracks each
    deezer:
      masterDecryptionKey: "" # the master key used for decrypting the deezer tracks. (yes this is not here you need to get it from somewhere else)
  jiosaavn:
    apiURL: "https://saavn.dev/api" # JioSaavn API URL

metrics:
  prometheus:
    enabled: false
    endpoint: /metrics

sentry:
  dsn: ""
  environment: ""
#  tags:
#    some_key: some_value
#    another_key: another_value

logging:
  file:
    path: ./.logs/lavalink/

  level:
    root: INFO
    lavalink: INFO

  request:
    enabled: true
    includeClientInfo: true
    includeHeaders: false
    includeQueryString: true
    includePayload: true
    maxPayloadLength: 10000


  logback:
    rollingpolicy:
      max-file-size: 3MB
      max-history: 30
